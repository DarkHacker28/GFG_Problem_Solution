class Solution {
  public:
    vector<int> spirallyTraverse(vector<vector<int> > &mat) {
        // code here
        int n = mat.size(), m = mat[0].size();
    vector<int> ans;
    int top = 0, bottom = n - 1, left = 0, right = m - 1;

    while (top <= bottom && left <= right) {
        // Traverse from left to right
        for (int j = left; j <= right; j++) 
            ans.push_back(mat[top][j]);
        top++;
        
        // Traverse from top to bottom
        for (int i = top; i <= bottom; i++) 
            ans.push_back(mat[i][right]);
        right--;
        
        // Traverse from right to left
        if (top <= bottom) {
            for (int j = right; j >= left; j--) 
                ans.push_back(mat[bottom][j]);
            bottom--;
        }
        
        // Traverse from bottom to top
        if (left <= right) {
            for (int i = bottom; i >= top; i--) 
                ans.push_back(mat[i][left]);
            left++;
        }
    }

    return ans;
    }
};
