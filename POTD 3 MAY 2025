class Solution {
  private:
    bool isPrime(int n){
        if(n<=1) return false;
        for(int i=2;i*i<=n;++i){
            if((n % i) == 0){
                return false;
            }
        }
        return true;
    }
    
    int prevPrime(int n){
        
        for(int i=n-1;i>=2;--i){
            if(isPrime(i)){
                return i;
            }
        }
        return -1;
    }
    
    int nextPrime(int n){
        
        for(int i=n+1;;i++){
            if(isPrime(i)){
                return i;
            }
        }
    }
    
    
  public:
    Node *primeList(Node *head) {
        Node* temp=head;
        while(temp){
            if(temp->val==1){
                temp->val=2;
            }else if(!isPrime(temp->val)){
                int nxt=nextPrime(temp->val);
                int prev=prevPrime(temp->val);
                if(temp->val - prev ==  nxt-temp->val){
                    temp->val = prev;
                }else if(temp->val-prev < nxt-temp->val){
                    temp->val=prev;
                }else{
                    temp->val=nxt;
                }
            }
            temp=temp->next;
        }
        return head;
    }
};
